pipeline {
    agent { label 'cloud' }

    environment {
        CLOUDFLARED_TAG = '2025.2.1'
        DOCKER_COMPOSE_DIR = 'docker-jenkins'
        DOCKER_STACK_NAME = 'jenkins'
        ETCD_DATA_PATH = '/data/etcd_data'
        JENKINS_AGENT_TAG = 'latest-jdk21'
        JENKINS_HOME_PATH = '/data/jenkins_home/jenkins_local'
        JENKINS_SECRET = credentials('JENKINS_AGENT_SECRET')
        JENKINS_TAG = 'latest-jdk21'
        LETSENCRYPT_HOST = params.VIRTUAL_HOST
        TUNNEL_TOKEN = credentials('CLOUDFLARE_TUNNEL_TOKEN')
        VIRTUAL_HOST = params.VIRTUAL_HOST
        VIRTUAL_PORT = 8080
        LETSENCRYPT_EMAIL = params.LETSENCRYPT_EMAIL

    }

    parameters {
        string(name: 'LETSENCRYPT_EMAIL', defaultValue: 'admin@example.com', description: 'Letsencrypt email address')
        string(name: 'VIRTUAL_HOST', defaultValue: 'jenkins.example.com', description: 'Virtual host domain')
    }

    options {
        skipDefaultCheckout()
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'master',
                    url: 'https://github.com/nazmang/docker.git',
                    changelog: false,
                    changeset: false,
                    poll: false,
                    checkoutSubmodules: false,
                    sparseCheckoutPaths: ["${env.DOCKER_COMPOSE_DIR}/*"]
            }
        }

        stage('Create Files') {
            steps {
                script {
                    def composeDir = "${env.WORKSPACE}/${env.DOCKER_COMPOSE_DIR}"

                    writeFile file: "${composeDir}/secret-file", text: env.JENKINS_SECRET

                    def envContent = """
                    CLOUDFLARED_TAG=${env.CLOUDFLARED_TAG}
                    ETCD_DATA_PATH=${env.ETCD_DATA_PATH}
                    JENKINS_HOME_PATH=${env.JENKINS_HOME_PATH}
                    JENKINS_AGENT_TAG=${env.JENKINS_AGENT_TAG}
                    JENKINS_TAG=${env.JENKINS_TAG}
                    LETSENCRYPT_EMAIL=${env.LETSENCRYPT_EMAIL}
                    LETSENCRYPT_HOST=${env.LETSENCRYPT_HOST}
                    TUNNEL_TOKEN=${env.TUNNEL_TOKEN}
                    VIRTUAL_HOST=${env.VIRTUAL_HOST}
                    VIRTUAL_PORT=${env.VIRTUAL_PORT}
                    """
                    writeFile file: "${composeDir}/.env", text: envContent
                }
            }
        }

        stage('Deploy stack') {
            steps {
                script {
                    dir("${env.DOCKER_COMPOSE_DIR}") {
                        sh "make -f Makefile -e deploy-all STACK_NAME=${env.DOCKER_STACK_NAME}"
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}