global:
  scrape_interval: 15s
  evaluation_interval: 15s

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
    monitor: "docker-host-alpha"

# Load and evaluate rules in this file every 'evaluation_interval' seconds.
rule_files:
  - "rules/alert.rules.yml"
  - "rules/postgres.alert.rules.yml"
  - "rules/jenkins.rules.yml"
  - "rules/zabbix.rules.yml"

# A scrape configuration containing exactly one endpoint to scrape.
scrape_configs:
  # - job_name: 'docker-swarm'
  #   dockerswarm_sd_configs:
  #     - host: tcp://dockerproxy:2375
  #       role: nodes
  #   relabel_configs:
  #     # Fetch metrics on port 9323.
  #     - source_labels: [__meta_dockerswarm_node_address]
  #       target_label: __address__
  #       replacement: $1:9323
  #     # Workaround to fix __meta_dockerswarm_node_address='0.0.0.0' bug for Leader: https://github.com/prometheus/prometheus/issues/11060
  #     - source_labels:
  #         - __meta_dockerswarm_node_manager_leader
  #         - __meta_dockerswarm_node_manager_address
  #       regex: 'true;(.+):[0-9]+'
  #       target_label: __address__
  #       replacement: '$1:9323'
  #     # Set hostname as instance label
  #     - source_labels: [__meta_dockerswarm_node_hostname]
  #       target_label: instance
  #     - source_labels: [__meta_dockerswarm_node_id]
  #       target_label: node_id
  #     - source_labels: [__meta_dockerswarm_service_name]
  #       target_label: job
  #     - source_labels: [__meta_dockerswarm_task_id]
  #       target_label: swarm_task_id
  #     - source_labels: [job]
  #       regex: "([^_]+)_.*"
  #       target_label: swarm_stack
  #     - source_labels: [job]
  #       regex: "[^_]+_(.*)"
  #       target_label: swarm_service

  - job_name: "dockerswarm"
    dockerswarm_sd_configs:
      - host: tcp://dockerproxy:2375
        role: tasks
    relabel_configs:
      # Only keep containers that should be running.
      - source_labels: [__meta_dockerswarm_task_desired_state]
        regex: running
        action: keep
      # Filter by service name
      - source_labels: [__meta_dockerswarm_service_name]
        regex: ".*_cadvisor|.*_nodeexporter"
        action: keep
      # Exclude containers with "ingress" in the network name
      - source_labels: [__meta_dockerswarm_network_name]
        regex: ".*ingress.*"
        action: drop
      # Set hostname as instance label
      - source_labels: [__meta_dockerswarm_node_hostname]
        target_label: instance
      - source_labels: [__meta_dockerswarm_node_id]
        target_label: node_id

  - job_name: "prometheus"
    scrape_interval: 20s
    static_configs:
      - targets: ["prometheus:9090"]

  - job_name: "postgres"
    static_configs:
      - targets: ["192.168.150.58:9187"]

#  - job_name: 'pushgateway'
#    scrape_interval: 10s
#    honor_labels: true
#    static_configs:
#      - targets: ['pushgateway:9091']

#  - job_name: 'nginx'
#    scrape_interval: 10s
#    static_configs:
#      - targets: ['nginxexporter:9113']

#  - job_name: 'aspnetcore'
#    scrape_interval: 10s
#    static_configs:
#      - targets: ['eventlog-proxy:5000', 'eventlog:5000']

alerting:
  alertmanagers:
    - scheme: http
      static_configs:
        - targets:
            - "alertmanager:9093"
