pipeline {
    agent { label 'swarm && local' } // Ensure the agent has Docker and Swarm mode enabled

    environment {
        // Define environment variables for the stack
        DOCKER_STACK_NAME = 'monitoring'
        DOCKER_COMPOSE_DIR = 'docker-monitoring' // Path to docker-compose.yml
        DOCKER_COMPOSE_FILE = 'docker-compose.yml' // Name of your Docker Compose file
        ADMIN_USER = 'admin' // Default admin user for Grafana
        ADMIN_PASSWORD = 'admin' // Default admin password for Grafana
        SLACK_URL = 'https://hooks.slack.com/services/TOKEN' // Slack webhook URL for Alertmanager
        SLACK_CHANNEL = 'general' // Slack channel for alerts
        SLACK_USER = 'alertmanager' // Slack username for alerts
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'master',
                url: 'https://github.com/nazmang/docker.git'
            }
        }

        stage('Deploy Monitoring Stack') {
            steps {
                dir("${env.DOCKER_COMPOSE_DIR}"){
                    // Deploy the stack using docker stack deploy
                    sh """
                        # Export environment variables (optional, if needed)
                        export ADMIN_USER=${ADMIN_USER}
                        export ADMIN_PASSWORD=${ADMIN_PASSWORD}
                        export SLACK_URL=${SLACK_URL}
                        export SLACK_CHANNEL=${SLACK_CHANNEL}
                        export SLACK_USER=${SLACK_USER}

                        # Deploy the stack
                        envsubst < ${env.DOCKER_COMPOSE_FILE} | docker stack deploy -c - ${env.DOCKER_STACK_NAME}
                    """
                }
            }
        }
    }

    post {
        success {
            echo "Monitoring stack deployed successfully!"
        }
        failure {
            echo "Failed to deploy the monitoring stack."
        }
        always {
            cleanWs() // Clean the workspace after the build
        }
    }
}